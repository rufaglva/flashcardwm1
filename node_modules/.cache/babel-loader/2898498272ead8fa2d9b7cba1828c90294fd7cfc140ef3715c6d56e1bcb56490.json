{"ast":null,"code":"var _jsxFileName = \"/Users/rufaguliyeva/flashcardwm1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport FlashcardList from \"./FlashcardList\";\nimport './app.css';\nimport axios from \"axios\";\nimport FlashcardManager from \"./FlashcardManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const categoryEl = useRef();\n  const amountEl = useRef();\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php').then(res => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n  useEffect(() => {}, []);\n  function decodeString(str) {\n    const textArea = document.createElement(`textarea`);\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios.get('https://opentdb.com/api.php', {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    }).then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: questionItem.correct_answer,\n          options: options.sort(() => Math.random() - .5)\n        };\n      }));\n      console.log(res.data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"header\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"category\",\n          ref: categoryEl,\n          children: categories.map(category => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.id,\n              children: category.name\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 18\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Number of Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          min: \"1\",\n          step: \"1\",\n          defaultValue: 10,\n          ref: amountEl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(FlashcardList, {\n        flashcards: flashcards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(FlashcardManager, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oNaZgHrR/8m5ivdRJEEpXYQKjSQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FlashcardList","axios","FlashcardManager","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","flashcards","setFlashcards","categories","setCategories","categoryEl","amountEl","get","then","res","data","trivia_categories","decodeString","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault","params","amount","current","category","results","map","questionItem","index","answer","correct_answer","options","incorrect_answers","a","id","Date","now","question","sort","Math","random","console","log","children","className","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","name","type","min","step","defaultValue","_c","$RefreshReg$"],"sources":["/Users/rufaguliyeva/flashcardwm1/src/App.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport FlashcardList from \"./FlashcardList\";\nimport './app.css'\nimport axios from \"axios\";\nimport FlashcardManager from \"./FlashcardManager\";\n\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([])\n  const [categories, setCategories] = useState([])\n\n  const categoryEl =  useRef()\n  const amountEl = useRef()\n\n  useEffect(() => {\n    axios\n    .get('https://opentdb.com/api_category.php')\n    .then(res => {\n      setCategories(res.data.trivia_categories)\n    })\n  }, [])\n\n  useEffect(() => {\n  }, [])\n\n  function decodeString(str) {\n    const textArea = document.createElement(`textarea`)\n    textArea.innerHTML= str\n    return textArea.value\n  }\n\n  function handleSubmit (e) {\n    e.preventDefault()\n    axios\n    .get('https://opentdb.com/api.php', {\n      params: {\n        amount: amountEl.current.value,\n        category:categoryEl.current.value\n      }\n    })\n    .then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer)\n        const options = [\n          ...questionItem.incorrect_answers.map(a => decodeString(a)),\n           answer]\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: questionItem.correct_answer,\n          options: options.sort(() => Math.random()- .5)\n        }\n      }))\n      console.log(res.data)\n    })\n  }\n\n  return (\n    <>\n    <form className=\"header\" onSubmit = {handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <select id=\"category\" ref = {categoryEl}>\n        {categories.map(category => {\n          return <option value={category.id} key = {category.id}>{category.name}</option>\n        })}\n        </select>\n      </div>\n      <div className=\"form-group\">\n      <label htmlFor=\"amount\">Number of Questions</label>\n      <input type = \"number\" id = \"amount\" min = \"1\" step = \"1\" defaultValue={10} ref = {amountEl}></input>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn\">Generate</button>\n        </div>\n    </form>\n    <div className=\"container\">\n      <FlashcardList flashcards={flashcards} />\n    </div>\n    </>\n\n  );\n\nreturn (\n    <div className=\"App\">\n      <FlashcardManager />\n    </div>\n  );\n\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}