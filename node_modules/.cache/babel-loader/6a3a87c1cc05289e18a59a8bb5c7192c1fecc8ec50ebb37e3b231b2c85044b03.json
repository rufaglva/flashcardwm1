{"ast":null,"code":"var _jsxFileName = \"/Users/rufaguliyeva/flashcardwm1/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport HomePage from './HomePage'; // Assuming you've created the HomePage component\nimport FlashcardManager from './FlashcardManager';\nimport FlashcardList from './FlashcardList';\nimport './app.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const categoryEl = useRef();\n  const amountEl = useRef();\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php').then(res => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n  useEffect(() => {}, []);\n  function decodeString(str) {\n    const textArea = document.createElement(`textarea`);\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios.get('https://opentdb.com/api.php', {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    }).then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: questionItem.correct_answer,\n          options: options.sort(() => Math.random() - 0.5)\n        };\n      }));\n      console.log(res.data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/flashcards\",\n              children: \"Flashcards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/flashcards\",\n          children: [/*#__PURE__*/_jsxDEV(FlashcardManager, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FlashcardList, {\n            flashcards: flashcards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"header\",\n            onSubmit: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oNaZgHrR/8m5ivdRJEEpXYQKjSQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Link","Switch","HomePage","FlashcardManager","FlashcardList","axios","jsxDEV","_jsxDEV","App","_s","flashcards","setFlashcards","useState","categories","setCategories","categoryEl","useRef","amountEl","useEffect","get","then","res","data","trivia_categories","decodeString","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault","params","amount","current","category","results","map","questionItem","index","answer","correct_answer","options","incorrect_answers","a","id","Date","now","question","sort","Math","random","console","log","children","to","fileName","_jsxFileName","lineNumber","columnNumber","path","className","onSubmit","_c","$RefreshReg$"],"sources":["/Users/rufaguliyeva/flashcardwm1/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport HomePage from './HomePage'; // Assuming you've created the HomePage component\nimport FlashcardManager from './FlashcardManager';\nimport FlashcardList from './FlashcardList';\nimport './app.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  const categoryEl = useRef();\n  const amountEl = useRef();\n\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php').then((res) => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n\n  useEffect(() => {}, []);\n\n  function decodeString(str) {\n    const textArea = document.createElement(`textarea`);\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios\n      .get('https://opentdb.com/api.php', {\n        params: {\n          amount: amountEl.current.value,\n          category: categoryEl.current.value,\n        },\n      })\n      .then((res) => {\n        setFlashcards(\n          res.data.results.map((questionItem, index) => {\n            const answer = decodeString(questionItem.correct_answer);\n            const options = [\n              ...questionItem.incorrect_answers.map((a) => decodeString(a)),\n              answer,\n            ];\n            return {\n              id: `${index}-${Date.now()}`,\n              question: decodeString(questionItem.question),\n              answer: questionItem.correct_answer,\n              options: options.sort(() => Math.random() - 0.5),\n            };\n          })\n        );\n        console.log(res.data);\n      });\n  }\n\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/flashcards\">Flashcards</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route path=\"/flashcards\">\n            <FlashcardManager />\n            <FlashcardList flashcards={flashcards} />\n          </Route>\n          <Route path=\"/\">\n            <form className=\"header\" onSubmit={handleSubmit}>\n              {/* Your existing form code here */}\n            </form>\n            <div className=\"container\">\n              {/* You can display other content for the home page here */}\n              <HomePage />\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}